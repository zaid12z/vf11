<%- include('../../partial/header.ejs') %>
    <br>
    <br>
    <br>
    <br>
    <br>
    <center>
        <div class="page-location">
            <h1>
                <%- page.main %>
            </h1>
        </div>
    </center>
    <br>
    <center>
        <style>
            .table-container {
                margin: 0 auto;
                padding: 20px;
                border-radius: 10px;
            }
            
            table {
                width: 100%;
                border-collapse: collapse;
                box-shadow: rgba(50, 50, 93, 0.25) 0px 13px 27px -5px, rgba(0, 0, 0, 0.3) 0px 8px 16px -8px;
                border-radius: 15px;
                font-family: 'Cairo';
            }
            
            th,
            td {
                padding: 10px;
                text-align: center;
            }
            
            th {
                cursor: pointer;
            }
            
            th {
                font-size: 10px;
            }
            
            th.sorted-asc::after {
                content: " ▲";
            }
            
            th.sorted-desc::after {
                content: " ▼";
            }
            
            td {
                font-size: 10px;
            }
            
            input[type="text"] {
                width: 90%;
                padding: 10px;
                margin-bottom: 15px;
                border-radius: 5px;
                border: none;
                outline: none;
                font-size: 12px;
            }
            
            .pagination {
                width: auto;
                text-align: center;
                margin-top: 20px;
                font-family: 'Cairo';
                display: flex;
                justify-content: center;
            }
            
            .pagination span {
                margin: 0 5px;
                padding: 4px 8px;
                background-color: #f0f0f0;
                border-radius: 5px;
                cursor: pointer;
                font-size: 12px;
            }
            
            .pagination .active {
                background-color: #2575fc;
            }
            
            .fade-in {
                animation: fadeIn 0.5s ease-in-out;
            }
            
            @keyframes fadeIn {
                from {
                    opacity: 0;
                }
                to {
                    opacity: 1;
                }
            }
        </style>
        <div class="account-system">
            <div class="account-rightside">
                <div class="account-page claps">
                    <div class="account-page-text">
                        <h1>الشريط</h1>
                    </div>
                    <div class="account-page-icon">
                        <i class="fa-duotone fa-solid fa-grid-2"></i>
                    </div>
                </div>
                <div class="account-page" data-page="account">
                    <div class="account-page-text">
                        <h1>العملاء</h1>
                    </div>
                    <div class="account-page-icon">
                        <i class="fa-duotone fa-solid fa-file-user"></i>
                    </div>
                </div>
                <div class="account-page" data-page="myservers">
                    <div class="account-page-text">
                        <h1>الخطط</h1>
                    </div>
                    <div class="account-page-icon">
                        <i class="fa-duotone fa-solid fa-server"></i>
                    </div>
                </div>
                <div class="account-page" data-page="paylogs">
                    <div class="account-page-text">
                        <h1>سجل المشتريات</h1>
                    </div>
                    <div class="account-page-icon">
                        <i class="fa-duotone fa-solid fa-cart-shopping"></i>
                    </div>
                </div>
                <div class="account-page" data-page="connected">
                    <div class="account-page-text">
                        <h1>اللوقات</h1>
                    </div>
                    <div class="account-page-icon">
                        <i class="fa-sharp-duotone fa-solid fa-link"></i>
                    </div>
                </div>
                <div class="sideline">

                </div>
            </div>
            <div class="account-body">
                <div class="account-body-page" data-page="account" style="display: block;">
                    <div class="account-body-page-title">
                        <h1>العملاء</h1>
                    </div>
                    <div class="table-container">
                        <input type="text" id="search-users" placeholder="البحث حسب اسم المستخدم...">
                        <div style="background: repeating-linear-gradient(-45deg, #1d56ff96, #1d56ff7a 2px, rgba(255, 255, 255, 0) 3px, rgba(255, 255, 255, 0) 7px); width: 100%; height: 7px;"></div>

                        <table>
                            <thead>
                                <tr>
                                    <th data-table="users" data-column="0">اسم المستخدم</th>
                                    <th data-table="users" data-column="1">الايميل</th>
                                    <th data-table="users" data-column="2">تاريخ الانشاء</th>
                                    <th data-table="users" data-column="3">حالة الحساب</th>
                                    <th data-table="users" data-column="4">عدد المشتريات</th>
                                    <th data-table="users" data-column="5">الاجرائات</th>
                                </tr>
                            </thead>
                            <tbody id="table-users">
                                <!-- Dynamic content will be loaded here -->
                            </tbody>
                        </table>
                        <div class="pagination" id="table-users-pagination">
                            <!-- Pagination buttons will be dynamically added here -->
                        </div>
                    </div>

                </div>
                <div class="account-body-page" data-page="myservers" style="display: none;">
                    <div class="account-body-page-title" style="display: flex; gap: 10px;">
                        <h1>الخطط</h1>
                        <button class="vps-toggle-btn" id="toggleForm">انشاء خطة جديدة</button>

                    </div>
                    <div class="table-container">
                        <input type="text" id="search-plan" placeholder="البحث حسب اسم المنتج...">
                        <div style="background: repeating-linear-gradient(-45deg, #1d56ff96, #1d56ff7a 2px, rgba(255, 255, 255, 0) 3px, rgba(255, 255, 255, 0) 7px); width: 100%; height: 7px;"></div>

                        <table>
                            <thead>
                                <tr>
                                    <th data-table="plan" data-column="0">اسم المنتج</th>
                                    <th data-table="plan" data-column="1">الفئة</th>
                                    <th data-table="plan" data-column="2">تاريخ الانشاء</th>
                                    <th data-table="plan" data-column="3">حالة المنتج</th>
                                    <th data-table="plan" data-column="4">عدد المشتريات</th>
                                    <th data-table="plan" data-column="5">الاجرائات</th>
                                </tr>
                            </thead>
                            <tbody id="table-plan">
                                <!-- Dynamic content will be loaded here -->
                            </tbody>
                        </table>
                        <div class="pagination" id="table-plan-pagination">
                            <!-- Pagination buttons will be dynamically added here -->
                        </div>
                    </div>
                </div>

                <div class="account-body-page" data-page="paylogs" style="display: none;">
                    <div class="account-body-page-title">
                        <h1>سجل المشتريات</h1>
                    </div>
                </div>
                <div class="account-body-page" data-page="connected" style="display: none;">
                    <div class="account-body-page-title">
                        <h1>اللوقات</h1>
                    </div>
                    <div class="table-container">
                        <input type="text" id="search-logs" placeholder="البحث حسب اسم العنوان...">
                        <div style="background: repeating-linear-gradient(-45deg, #1d56ff96, #1d56ff7a 2px, rgba(255, 255, 255, 0) 3px, rgba(255, 255, 255, 0) 7px); width: 100%; height: 7px;"></div>

                        <table>
                            <thead>
                                <tr>
                                    <th data-table="logs" data-column="0">نوع اللوق</th>
                                    <th data-table="logs" data-column="1">العنوان</th>
                                    <th data-table="logs" data-column="2">تاريخ الانشاء</th>
                                    <th data-table="logs" data-column="3">ايدي الشخص</th>
                                    <th data-table="logs" data-column="4">الاجرائات</th>
                                </tr>
                            </thead>
                            <tbody id="table-logs">
                                <!-- Dynamic content will be loaded here -->
                            </tbody>
                        </table>
                        <div class="pagination" id="table-logs-pagination">
                            <!-- Pagination buttons will be dynamically added here -->
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="debug user-editor">

        </div>
        <script>
            $(document).on("click", ".open-user-editor", (e) => {
                $.ajax({
                    url: '/get-csrf-token',
                    type: 'GET',
                    success: function(response) {
                        const csrfToken = response.csrfToken; // Now csrfToken is initialized
                        $.ajax({
                            url: '/api/getuser', // Base URL
                            type: 'GET',
                            headers: {
                                'X-CSRF-Token': csrfToken // Add the CSRF token to the headers
                            },
                            data: {
                                userid: $(e.currentTarget).data("userid"), // This will be added as a query string (e.g., ?userid=1)
                            },
                            success: function(response) {
                                if (response.success) {
                                    let state = "مفعل";
                                    let role = "عميل";

                                    if (response.user.role == "admin") {
                                        role = "مسؤول";
                                    }

                                    if (response.user.is_active == 0) {
                                        state = "غير مفعل";
                                    }

                                    let freez = ""

                                    if (response.user.freeze == 1) {
                                        freez = "checked"
                                    }

                                    $('.user-editor').html(`
                                    <div class="debug-panel">
                                        <div class="debug-panel-title">
                                            <h1>العميل رقم [${response.user.id}]</h1>
                                        </div>
                                        <div class="debug-panel-item">
                                            <h1>اسم المستخدم</h1>
                                            <input type="text" class="edit-username" value="${response.user.username}">
                                        </div>
                                        <div class="debug-panel-item">
                                            <h1>الايميل</h1>
                                            <input type="text" class="edit-email" value="${response.user.email}">
                                        </div>
                                        <br>
                                        <div class="debug-panel-item">
                                            <h1>الرتبة</h1>
                                            <div class="dropdown">
                                                <div class="select">
                                                    <i class="fa fa-chevron-left"></i>
                                                    <span id="selected-role">${role}</span>
                                                </div>
                                                <input type="hidden" name="gender">
                                                <ul class="dropdown-menu">
                                                    <li id="male">عميل</li>
                                                    <li id="female">مسؤول</li>
                                                </ul>
                                            </div>
                                        </div>
                                        <br>
                                        <div class="debug-panel-item">
                                            <h1>حالة الحساب</h1>
                                            <div class="dropdown">
                                                <div class="select">
                                                    <i class="fa fa-chevron-left"></i>
                                                    <span id="selected-state">${state}</span>
                                                </div>
                                                <input type="hidden" name="gender">
                                                <ul class="dropdown-menu">
                                                    <li id="male">مفعل</li>
                                                    <li id="female">غير مفعل</li>
                                                </ul>
                                            </div>
                                        </div>
                                        <br>
                                        <div class="debug-panel-item">
                                            <h1>المشتريات</h1>
                                            <div class="debug-panel-smallpanel">
                                                <div class="debug-panel-smallpanel-item">
                                                    <h1 style="font-family: 'Cairo';">40.56.231.12</h1>
                                                </div>
                                                <div class="debug-panel-smallpanel-item">
                                                    <h1 style="font-family: 'Cairo';">فعال</h1>
                                                </div>
                                                <div class="debug-panel-smallpanel-item">
                                                    <button title="فتح اعدادات الخادم"><i class="fa-solid fa-eye"></i></button>
                                                </div>
                                            </div>
                                            <div class="debug-panel-smallpanel">
                                                <div class="debug-panel-smallpanel-item">
                                                    <h1 style="font-family: 'Cairo';">لايوجد بيانات</h1>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="debug-panel-item">
                                            <h1>الارتباطات</h1>
                                            <div class="debug-panel-smallpanel">
                                                <div class="debug-panel-smallpanel-item">
                                                    <h1 style="font-family: 'Cairo';">Disocrd</h1>
                                                </div>
                                                <div class="debug-panel-smallpanel-item">
                                                    <h1 style="font-family: 'Cairo';">7krh</h1>
                                                </div>
                                                <div class="debug-panel-smallpanel-item">
                                                    <h1 style="font-family: 'Cairo';">854032074025074720</h1>
                                                </div>
                                            </div>
                                            <div class="debug-panel-smallpanel">
                                                <div class="debug-panel-smallpanel-item">
                                                    <h1 style="font-family: 'Cairo';">لايوجد بيانات</h1>
                                                </div>
                                            </div>
                                        </div>
                                        <br>
                                        <form action="">
                                            <label class="form-control" style="padding: 10px;">
                                          <input type="checkbox" name="checkbox" class="account_freeze" ${freez}/>
                                            <h1 style="color: black;">تجميد الحساب</h1>
                                        </label>
                                        </form>
                                        <div class="debug-panel-buttons">
                                            <button title="حفظ البيانات" class="user-editor-save" data-userid="${response.user.id}"><i class="fa-duotone fa-solid fa-download"></i></button>
                                            <button title="اغلاق" class="debug-panel-close"><i class="fa-solid fa-xmark"></i></button>
                                        </div>
                                    </div>`)
                                    $('.user-editor').fadeIn();
                                } else {
                                    Web.Notify("error", "خطاء", response.message, 3000);
                                }
                            },
                            error: function(xhr, status, error) {
                                Web.Notify("error", "خطاء", "Error fetching data", 3000);
                            }
                        });
                    },
                    error: function(xhr, status, error) {
                        Web.Notify("error", "خطاء", "Error fetching CSRF token:", 3000)
                    }
                });

            })
            $(document).on("click", ".debug-panel-close", (e) => {
                $(e.currentTarget.parentElement.parentElement.parentElement).fadeOut();
            })
            $(document).on("click", ".user-editor-save", (e) => {
                let username = $('.edit-username').val();
                let email = $('.edit-email').val();
                let selectedrole = $('#selected-role').html();
                let selectedstate = $('#selected-state').html();
                let freeze = 0;

                if (selectedrole == "عميل") {
                    selectedrole = "user"
                } else if (selectedrole == "مسؤول") {
                    selectedrole = "admin"
                }

                if (selectedstate == "مفعل") {
                    selectedstate = 1
                } else if (selectedstate == "غير مفعل") {
                    selectedstate = 0
                }

                if (email === "") {
                    return Web.Notify('error', 'حقول فارغة', 'حقل الاميل فارغ', 4000);
                }

                if (username === "") {
                    return Web.Notify('error', 'حقول فارغة', 'حقل اسم المستخدم فارغ', 4000);
                }

                if ($('.account_freeze').prop('checked')) {
                    freeze = 1
                }

                $.ajax({
                    url: '/get-csrf-token',
                    type: 'GET',
                    success: function(response) {
                        const csrfToken = response.csrfToken; // Now csrfToken is initialized
                        $.ajax({
                            url: '/api/edituser', // The API endpoint for registration
                            type: 'POST', // Specifies this is a POST request
                            headers: {
                                'X-CSRF-Token': csrfToken // Add the CSRF token to the headers (if required)
                            },
                            data: {
                                userid: $(e.currentTarget).data("userid"),
                                username: username,
                                email: email,
                                selectedrole: selectedrole,
                                selectedstate: selectedstate,
                                freeze: freeze,
                            },
                            success: function(response) {
                                // If registration was successful
                                if (response.success) {
                                    Web.Notify('success', 'نجاح', response.message, 4000); // Show success notification
                                    $(e.currentTarget.parentElement.parentElement.parentElement).fadeOut();
                                    fetchData("users");
                                } else {
                                    // If there was an issue, show an error notification
                                    Web.Notify('error', 'خطأ', response.message, 4000);
                                }
                            },
                            error: function(xhr, status, error) {
                                // Handle any error that might occur during the request
                                Web.Notify('error', 'خطأ', 'Something went wrong', 4000);
                            }
                        });

                    },
                    error: function(xhr, status, error) {
                        console.error('Error fetching CSRF token:', error);
                    }
                });

                console.log(selectedrole)
            })
        </script>

        <style>
            .debug {
                top: 0px;
                left: 0px;
                position: fixed;
                width: 100%;
                height: 100%;
                background-color: rgba(255, 255, 255, 0.705);
                z-index: 1000;
                overflow: auto;
                display: none;
            }
            
            .debug-panel {
                position: relative;
                top: 50%;
                transform: translateY(-50%);
                width: 400px;
                height: auto;
                padding: 10px;
                background-color: rgb(255, 255, 255);
                box-shadow: rgba(100, 100, 111, 0.336) 0px 7px 29px 0px;
                border-radius: 15px;
            }
            
            .debug-panel-title {
                width: auto;
                height: auto;
            }
            
            .debug-panel-title h1 {
                font-size: 17px;
                font-family: 'Cairo';
            }
            
            .debug-panel-item {
                width: 100%;
                height: auto;
                padding: 10px;
            }
            
            .debug-panel-item h1 {
                font-size: 12px;
                text-align: right;
            }
            
            .debug-panel-item input {
                width: 70%;
                font-size: 12px;
                float: right;
                border: none;
                padding: 5px;
                border-right: 1px solid black;
            }
            
            .debug-panel-smallpanel {
                width: 90%;
                height: auto;
                display: flex;
                justify-content: space-between;
                border-right: 1px solid black;
                box-shadow: rgba(100, 100, 111, 0.336) 0px 7px 29px 0px;
                margin-top: 10px;
            }
            
            .debug-panel-smallpanel-item {
                width: auto;
                height: auto;
                padding: 0px 20px;
            }
            
            .debug-panel-smallpanel-item button {
                width: 25px;
                height: 24px;
                border: none;
                background-color: rgba(0, 0, 0, 0.144);
                border-radius: 50%;
                color: rgb(43, 43, 43);
                font-size: 12px;
                margin-top: 8px;
            }
            
            .debug-panel-buttons {
                margin-top: 10px;
                width: auto;
                height: auto;
                padding: 10px;
                display: flex;
                flex-flow: wrap;
                gap: 10px;
            }
            
            .debug-panel-buttons button {
                width: 30px;
                height: 30px;
                border: none;
                background-color: rgba(0, 0, 0, 0.144);
                border-radius: 50%;
                padding: 5px;
                color: rgb(43, 43, 43);
                font-size: 15px;
            }
            
            span.msg,
            span.choose {
                color: #555;
                padding: 5px 0 10px;
                display: inherit;
                float: right;
            }
            
            .select span {
                float: right;
                padding: 0px 10px;
            }
            
            .dropdown {
                width: 70%;
                display: inline-block;
                border-radius: 2px;
                transition: all .5s ease;
                position: relative;
                font-size: 14px;
                color: #474747;
                text-align: left;
                border-right: solid 1px black;
                float: right;
            }
            
            .dropdown .select {
                cursor: pointer;
                display: block;
                padding: 5px 10px;
            }
            
            .dropdown .select>i {
                font-size: 13px;
                color: #888;
                cursor: pointer;
                transition: all .3s ease-in-out;
                float: right;
                line-height: 25px
            }
            
            .dropdown:active {
                background-color: #f8f8f8
            }
            
            .dropdown.active:hover,
            .dropdown.active {
                box-shadow: 0 0 4px rgb(204, 204, 204);
                border-radius: 2px 2px 0 0;
                background-color: #f8f8f8
            }
            
            .dropdown.active .select>i {
                transform: rotate(-90deg)
            }
            
            .dropdown .dropdown-menu {
                position: absolute;
                background-color: #fff;
                width: 100%;
                left: 0;
                margin-top: 1px;
                box-shadow: 0 1px 2px rgb(204, 204, 204);
                border-radius: 0 1px 2px 2px;
                overflow: hidden;
                display: none;
                max-height: 144px;
                overflow-y: auto;
                z-index: 9
            }
            
            .dropdown .dropdown-menu li {
                padding: 10px;
                transition: all .2s ease-in-out;
                font-size: 10px;
                text-align: right;
                cursor: pointer
            }
            
            .dropdown .dropdown-menu {
                padding: 0;
                list-style: none
            }
            
            .dropdown .dropdown-menu li:hover {
                background-color: #f2f2f2
            }
            
            .dropdown .dropdown-menu li:active {
                background-color: #e2e2e2
            }
        </style>
    </center>
    <%- include('../../partial/footer.ejs') %>

        <script>
            $(document).on("click", '.dropdown', function() {
                $(this).attr('tabindex', 1).focus();
                $(this).toggleClass('active');
                $(this).find('.dropdown-menu').slideToggle(300);
            });
            $(document).on("focusout", '.dropdown', function() {
                $(this).removeClass('active');
                $(this).find('.dropdown-menu').slideUp(300);
            });
            $(document).on("click", '.dropdown .dropdown-menu li', function() {
                $(this).parents('.dropdown').find('span').text($(this).text());
                $(this).parents('.dropdown').find('input').attr('value', $(this).attr('id'));
            });


            $(document).on("click", '.dropdown-menu li', function() {
                var input = '<strong>' + $(this).parents('.dropdown').find('input').val() + '</strong>',
                    msg = '<span class="msg">Hidden input value: ';
                $('.msg').html(msg + input + '</span>');
            });
        </script>

        <script>
            // Global variables for data and pagination
            let data = [];
            let rowsPerPage = 10;
            let currentPage = {
                users: 1,
                plan: 1,
                logs: 1
            };
            let filteredData = {
                users: [],
                plan: [],
                logs: [],
            };
            let sortOrder = {
                users: "asc",
                plan: "asc"
            };
            let currentSortedColumn = {
                users: -1,
                plan: -1,
                logs: -1,
            };

            $(document).ready(function() {
                fetchData("users"); // Fetch data for users table
                fetchData("plan"); // Fetch data for plan table
                fetchData("logs"); // Fetch data for plan table

                // Search functionality for both tables
                $('#search-users').on('input', function() {
                    const searchTerm = $(this).val().toLowerCase();
                    filteredData.users = data.users.filter(row => row[0].toLowerCase().includes(searchTerm));
                    currentPage.users = 1;
                    renderTable("users");
                    renderPagination("users");
                    handleSearch("users", searchTerm); // Change "logs" to the tableType you want to search, e.g., "users" or "plan"
                });

                $('#search-plan').on('input', function() {
                    const searchTerm = $(this).val().toLowerCase();
                    filteredData.plan = data.plan.filter(row => row[0].toLowerCase().includes(searchTerm));
                    currentPage.plan = 1;
                    renderTable("plan");
                    renderPagination("plan");
                    handleSearch("plan", searchTerm); // Change "logs" to the tableType you want to search, e.g., "users" or "plan"
                });

                $('#search-logs').on('input', function() {
                    const searchTerm = $(this).val().toLowerCase();
                    filteredData.logs = data.logs.filter(row => row[0].toLowerCase().includes(searchTerm));
                    currentPage.logs = 1;
                    renderTable("logs");
                    renderPagination("logs");
                    handleSearch("logs", searchTerm); // Change "logs" to the tableType you want to search, e.g., "users" or "plan"
                    console.log(12)
                });

                // Sorting functionality for both tables
                $('th[data-table="users"]').on('click', function() {
                    console.log(1)
                    handleSort("users", $(this).data('column'));
                });
                $('th[data-table="plan"]').on('click', function() {
                    handleSort("plan", $(this).data('column'));
                });
                $('th[data-table="logs"]').on('click', function() {
                    handleSort("logs", $(this).data('column'));
                });
            });

            function fetchData(tableType) {
                $.ajax({
                    url: '/get-csrf-token',
                    type: 'GET',
                    success: function(response) {
                        const csrfToken = response.csrfToken;
                        $.ajax({
                            url: getApiUrl(tableType),
                            type: 'GET',
                            headers: {
                                'X-CSRF-Token': csrfToken
                            },
                            success: function(response) {
                                if (response.success) {
                                    data[tableType] = parseData(response, tableType);
                                    filteredData[tableType] = data[tableType];
                                    renderTable(tableType);
                                    renderPagination(tableType);
                                } else {
                                    $(`#table-${tableType}`).append(`<tr><td colspan="6">Error loading ${tableType}.</td></tr>`);
                                }
                            },
                            error: function() {
                                $(`#table-${tableType}`).append(`<tr><td colspan="6">Error fetching data.</td></tr>`);
                            }
                        });
                    },
                    error: function() {
                        console.error('Error fetching CSRF token.');
                    }
                });
            }

            function renderTable(tableType) {
                const tableBody = $(`#table-${tableType}`);
                tableBody.empty();
                const startIndex = (currentPage[tableType] - 1) * rowsPerPage;
                const paginatedData = filteredData[tableType].slice(startIndex, startIndex + rowsPerPage);

                paginatedData.forEach(row => {
                    const tr = $('<tr></tr>').addClass('fade-in');
                    row.forEach(cell => {
                        tr.append(`<td>${cell}</td>`);
                    });
                    tableBody.append(tr);
                });
            }

            function handleSearch(tableType, searchTerm) {
                // Filter your data based on the search term
                filteredData[tableType] = data[tableType].filter(item => {
                    // Replace 'someField' with the actual field you want to search
                    return item.someField.includes(searchTerm);
                });

                // Reset the current page to 1
                currentPage[tableType] = 1;

                // Render the table and pagination for the filtered data
                renderTable(tableType);
                renderPagination(tableType);
            }

            function renderPagination(tableType) {
                const totalPages = Math.ceil(filteredData[tableType].length / rowsPerPage);
                const pagination = $(`#table-${tableType}-pagination`);
                pagination.empty();

                const currentPageNumber = currentPage[tableType];

                // Calculate the range of pages to display
                let startPage = Math.max(1, currentPageNumber - 1);
                let endPage = Math.min(totalPages, startPage + 3);

                // Adjust startPage if we're near the end
                if (endPage - startPage < 3 && startPage > 1) {
                    startPage = Math.max(1, endPage - 3);
                }

                // "Previous" button
                const prevBtn = $('<span></span>').text('<');
                if (currentPageNumber > 1) {
                    prevBtn.addClass('active');
                    prevBtn.on('click', function() {
                        currentPage[tableType] -= 1;
                        renderTable(tableType);
                        renderPagination(tableType);
                    });
                }
                pagination.append(prevBtn);

                // Page numbers
                for (let i = startPage; i <= endPage; i++) {
                    const pageBtn = $('<span></span>').text(i);
                    if (i === currentPageNumber) {
                        pageBtn.addClass('active');
                    }
                    pageBtn.on('click', function() {
                        currentPage[tableType] = i;
                        renderTable(tableType);
                        renderPagination(tableType);
                    });
                    pagination.append(pageBtn);
                }

                // "Next" button
                const nextBtn = $('<span></span>').text('>');
                if (currentPageNumber < totalPages) {
                    nextBtn.addClass('active');
                    nextBtn.on('click', function() {
                        currentPage[tableType] += 1;
                        renderTable(tableType);
                        renderPagination(tableType);
                    });
                }
                pagination.append(nextBtn);
            }

            function handleSort(tableType, column) {
                if (currentSortedColumn[tableType] === column) {
                    sortOrder[tableType] = (sortOrder[tableType] === "asc") ? "desc" : "asc";
                } else {
                    sortOrder[tableType] = "asc";
                    currentSortedColumn[tableType] = column;
                }

                $(`th[data-table="${tableType}"]`).removeClass('sorted-asc sorted-desc');
                $(`th[data-table="${tableType}"][data-column="${column}"]`).addClass(sortOrder[tableType] === "asc" ? 'sorted-asc' : 'sorted-desc');

                sortData(filteredData[tableType], column, sortOrder[tableType]);
                renderTable(tableType);
            }

            function sortData(dataToSort, column, order) {
                dataToSort.sort((a, b) => {
                    const cellA = a[column].toString().toLowerCase();
                    const cellB = b[column].toString().toLowerCase();

                    const numA = parseFloat(cellA.replace(/[^0-9.-]+/g, ""));
                    const numB = parseFloat(cellB.replace(/[^0-9.-]+/g, ""));

                    if (!isNaN(numA) && !isNaN(numB)) {
                        return order === 'asc' ? numA - numB : numB - numA;
                    } else {
                        return order === 'asc' ? cellA.localeCompare(cellB) : cellB.localeCompare(cellA);
                    }
                });
            }

            function getApiUrl(tableType) {
                switch (tableType) {
                    case "users":
                        return '/api/getusers';
                    case "plan":
                        return '/api/allservers';
                    case "logs":
                        return '/api/getlogs'; // Assuming this is the API endpoint for logs data
                    default:
                        return '';
                }
            }

            function parseData(response, tableType) {
                switch (tableType) {
                    case "users":
                        return response.users.map(item => [
                            item.username, item.email, item.created_at,
                            item.is_active ? '<span style="color: green;">Active</span>' : '<span style="color: red;">Inactive</span>',
                            "0", // Replace with actual purchase count if available
                            `<div class="dataview-header-items user-header-items open-user-editor" data-userid="${item.id}">
                                <div class="dataview-header-icon user-header-icon">
                                    <i class="fa-duotone fa-solid fa-pen-to-square"></i>
                                </div>
                            </div>`
                        ]);
                    case "plan":
                        return response.servers.map(item => [
                            item.title, item.category, item.price,
                            item.active ? '<span style="color: green;">Active</span>' : '<span style="color: red;">Inactive</span>',
                            "0", // Replace with actual purchase count if available
                            `<div class="dataview-header-items user-header-items">
                                <div class="dataview-header-icon user-header-icon">
                                    <i class="fa-duotone fa-solid fa-pen-to-square"></i>
                                </div>
                            </div>`
                        ]);
                    case "logs":
                        return response.logs.map(item => [
                            item.event_type, item.message, item.date, item.user_id,
                            // Replace with actual purchase count if available
                            `<div class="dataview-header-items user-header-items">
                                <div class="dataview-header-icon user-header-icon">
                                    <i class="fa-duotone fa-solid fa-pen-to-square"></i>
                                </div>
                            </div>`
                        ]);
                    default:
                        return [];
                }
            }
        </script>
        <!DOCTYPE html>
        <html lang="en">

        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>VPS Plan Management</title>
            <style>
                body {
                    padding: 0px;
                    margin: 0px;
                    background-color: rgb(251, 253, 255);
                    font-family: 'Droid Arabic Kufi', serif !important;
                    font-weight: 700 !important;
                }
                
                button,
                input,
                label {
                    font-family: 'Droid Arabic Kufi', serif !important;
                    font-weight: 700 !important;
                }
                
                .vps-main-container {
                    max-width: 1200px;
                    margin: 0 auto;
                }
                
                .vps-main-heading {
                    text-align: center;
                    color: #2d3748;
                    margin-bottom: 30px;
                    font-size: 2.5rem;
                }
                
                .vps-modal-overlay {
                    display: none;
                    position: fixed;
                    top: 0;
                    left: 0;
                    right: 0;
                    bottom: 0;
                    z-index: 1000;
                    opacity: 0;
                    transition: opacity 0.3s ease;
                    scale: 0.7;
                }
                
                .vps-modal-overlay.vps-show {
                    display: flex;
                    opacity: 1;
                    align-items: center;
                    justify-content: center;
                }
                
                .vps-modal-content {
                    background-color: white;
                    padding: 10px 30px;
                    border-radius: 10px;
                    box-shadow: rgba(50, 50, 93, 0.25) 0px 13px 27px -5px, rgba(0, 0, 0, 0.3) 0px 8px 16px -8px;
                    width: 90%;
                    max-width: 600px;
                    position: relative;
                    transform: translateY(-20px);
                    transition: transform 0.3s ease;
                    padding-bottom: 30px;
                }
                
                .vps-modal-overlay.vps-show .vps-modal-content {
                    transform: translateY(0);
                }
                
                .vps-modal-close {
                    position: absolute;
                    top: 15px;
                    right: 15px;
                    font-size: 24px;
                    cursor: pointer;
                    color: #666;
                    background: none;
                    border: none;
                    padding: 5px;
                }
                
                .vps-modal-close:hover {
                    color: #333;
                }
                
                .vps-section-heading {
                    color: #2d3748;
                    margin-bottom: 20px;
                    font-size: 1.8rem;
                }
                
                .vps-form-group {
                    margin-bottom: 20px;
                }
                
                .vps-form-label {
                    display: block;
                    margin-bottom: 8px;
                    font-weight: 600;
                    color: #4a5568;
                }
                
                .vps-form-input,
                .vps-form-select {
                    width: 100%;
                    padding: 10px;
                    border: 2px solid #e2e8f0;
                    border-radius: 6px;
                    font-size: 1rem;
                    transition: border-color 0.3s ease;
                    font-family: 'Droid Arabic Kufi', serif !important;
                    font-weight: 700 !important;
                }
                
                .vps-form-input:focus,
                .vps-form-select:focus {
                    outline: none;
                    border-color: #4299e1;
                }
                
                .vps-submit-btn,
                .vps-toggle-btn {
                    background-color: #4299e1;
                    color: white;
                    padding: 5px 10px;
                    border: none;
                    border-radius: 6px;
                    font-size: 12px !important;
                    cursor: pointer;
                    transition: background-color 0.3s ease;
                    margin: 10px;
                }
                
                .vps-submit-btn {
                    width: 100%;
                }
                
                .vps-toggle-btn {
                    margin-bottom: 20px;
                }
                
                .vps-submit-btn:hover,
                .vps-toggle-btn:hover {
                    background-color: #3182ce;
                }
                
                .vps-plans-container {
                    background-color: white;
                    padding: 30px;
                    border-radius: 10px;
                    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
                }
                
                .vps-table {
                    width: 100%;
                    border-collapse: collapse;
                    margin-top: 20px;
                }
                
                .vps-table-header,
                .vps-table-cell {
                    padding: 15px;
                    text-align: left;
                    border-bottom: 1px solid #e2e8f0;
                }
                
                .vps-table-header {
                    background-color: #f7fafc;
                    font-weight: 600;
                    color: #4a5568;
                }
                
                .vps-table-row:hover {
                    background-color: #f7fafc;
                }
                
                @media (max-width: 768px) {
                    .vps-main-container {
                        padding: 10px;
                    }
                    .vps-table {
                        display: block;
                        overflow-x: auto;
                    }
                    .vps-modal-content {
                        width: 95%;
                        padding: 20px;
                    }
                }
            </style>
        </head>

        <body>
            <div class="vps-main-container">


                <div class="vps-modal-overlay" id="modalOverlay">
                    <div class="vps-modal-content">
                        <button class="vps-modal-close" id="closeModal">&times;</button>
                        <br>
                        <h2 class="vps-section-heading">انشاء خطة</h2>
                        <div class="vps-form-group">
                            <label class="vps-form-label" for="name">اسم الخطة</label>
                            <input class="vps-form-input" type="text" id="name" name="name" required>
                        </div>

                        <div class="vps-form-group">
                            <label class="vps-form-label" for="des">وصف الخطة</label>
                            <input class="vps-form-input" type="text" id="des" name="des" required>
                        </div>

                        <div class="vps-form-group">
                            <label class="vps-form-label" for="category">الخطة الاساسية</label>
                            <select class="vps-form-select" id="category" name="category" required>
                            </select>
                        </div>

                        <script>
                            $.ajax({
                                url: '/get-csrf-token',
                                type: 'GET',
                                success: function(response) {
                                    const csrfToken = response.csrfToken;
                                    $.ajax({
                                        url: "/api/virtplan",
                                        type: 'GET',
                                        headers: {
                                            'X-CSRF-Token': csrfToken
                                        },
                                        success: function(response) {
                                            if (response.success) {
                                                console.log(response)
                                                response.plans.forEach(function(plan) {
                                                    $('.vps-form-select').append(`<option value="planselect" data="${plan.id}">${plan.name}</option>`);
                                                })
                                            } else {}
                                        },
                                        error: function() {}
                                    });
                                },
                                error: function() {}
                            });
                        </script>
                        <div class="vps-form-group">
                            <label class="vps-form-label" for="category">الفئة</label>
                            <select class="vps-form-select" id="category" name="category" required>
                        <option value="basic">الاقتصادية</option>
                        <option value="professional">الاحترافية</option>
                    </select>
                        </div>
                        <div class="vps-form-group">
                            <label class="vps-form-label" for="price">السعر</label>
                            <input class="vps-form-input" type="number" id="price" name="price" step="0.01" min="0" required>
                        </div>

                        <center>
                            <button class="vps-submit-btn" style="font-size: 18px !important;margin:0px;">انشاء</button>

                        </center>
                    </div>
                </div>
            </div>

            <script>
                const modalOverlay = document.getElementById('modalOverlay');
                const toggleButton = document.getElementById('toggleForm');
                const closeButton = document.getElementById('closeModal');

                toggleButton.addEventListener('click', () => {
                    modalOverlay.classList.add('vps-show');
                    document.body.style.overflow = 'hidden';
                });

                function closeModal() {
                    modalOverlay.classList.remove('vps-show');
                    document.body.style.overflow = '';
                }

                closeButton.addEventListener('click', closeModal);

                modalOverlay.addEventListener('click', (e) => {
                    if (e.target === modalOverlay) {
                        closeModal();
                    }
                });

                document.addEventListener('keydown', (e) => {
                    if (e.key === 'Escape' && modalOverlay.classList.contains('vps-show')) {
                        closeModal();
                    }
                });

                document.getElementById('vpsForm').addEventListener('submit', function(e) {
                    const formData = new FormData(this);
                    const values = Object.fromEntries(formData.entries());

                    if (values.cpu <= 0 || values.ram <= 0 || values.storage <= 0 || values.traffic <= 0 || values.price < 0) {
                        e.preventDefault();
                        alert('Please enter valid positive numbers for CPU, RAM, Storage, Traffic, and Price');
                        return;
                    }

                    if (!values.category) {
                        e.preventDefault();
                        alert('Please select a category');
                        return;
                    }
                });
            </script>
        </body>

        </html>