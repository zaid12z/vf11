<%- include('../partial/header.ejs') %>
    <br>
    <br>
    <br>
    <br>
    <br>
    <center>
        <div class="page-location">
            <h1>
                <%- page.main %>
            </h1>
        </div>
    </center>
    <br>
    <center>
        <style>
            .table-container {
                margin: 0 auto;
                padding: 20px;
                border-radius: 10px;
            }
            
            table {
                width: 100%;
                border-collapse: collapse;
                box-shadow: rgba(50, 50, 93, 0.25) 0px 13px 27px -5px, rgba(0, 0, 0, 0.3) 0px 8px 16px -8px;
                border-radius: 15px;
                font-family: 'Cairo';
            }
            
            th,
            td {
                padding: 10px;
                text-align: center;
            }
            
            th {
                cursor: pointer;
            }
            
            th {
                font-size: 10px;
            }
            
            th.sorted-asc::after {
                content: " ▲";
            }
            
            th.sorted-desc::after {
                content: " ▼";
            }
            
            td {
                font-size: 10px;
            }
            
            input[type="text"] {
                width: 90%;
                padding: 10px;
                margin-bottom: 15px;
                border-radius: 5px;
                border: none;
                outline: none;
                font-size: 12px;
            }
            
            .pagination {
                width: auto;
                text-align: center;
                margin-top: 20px;
                font-family: 'Cairo';
                display: flex;
                justify-content: center;
            }
            
            .pagination span {
                margin: 0 5px;
                padding: 4px 8px;
                background-color: #f0f0f0;
                border-radius: 5px;
                cursor: pointer;
                font-size: 12px;
            }
            
            .pagination .active {
                background-color: #2575fc;
            }
            
            .fade-in {
                animation: fadeIn 0.5s ease-in-out;
            }
            
            @keyframes fadeIn {
                from {
                    opacity: 0;
                }
                to {
                    opacity: 1;
                }
            }
        </style>
        <div class="account-system">
            <div class="account-rightside">
                <div class="account-page claps">
                    <div class="account-page-text">
                        <h1>الشريط</h1>
                    </div>
                    <div class="account-page-icon">
                        <i class="fa-duotone fa-solid fa-grid-2"></i>
                    </div>
                </div>
                <div class="account-page" data-page="account">
                    <div class="account-page-text">
                        <h1>الحساب</h1>
                    </div>
                    <div class="account-page-icon">
                        <i class="fa-duotone fa-solid fa-file-user"></i>
                    </div>
                </div>
                <div class="account-page" data-page="myservers">
                    <div class="account-page-text">
                        <h1>خوادمي</h1>
                    </div>
                    <div class="account-page-icon">
                        <i class="fa-duotone fa-solid fa-server"></i>
                    </div>
                </div>
                <div class="account-page" data-page="connected">
                    <div class="account-page-text">
                        <h1>الربط</h1>
                    </div>
                    <div class="account-page-icon">
                        <i class="fa-duotone fa-solid fa-cart-shopping"></i>
                    </div>
                </div>
                <div class="sideline">

                </div>
            </div>
            <div class="account-body">
                <div class="account-body-page" data-page="account" style="display: block;">
                    <div class="account-body-page-title">
                        <h1>الحساب</h1>
                    </div>

                </div>
                <div class="account-body-page" data-page="myservers" style="display: none;">
                    <div class="account-body-page-title">
                        <h1>خوادمي</h1>
                    </div>

                    <div class="table-container">
                        <input type="text" id="search-myserver" placeholder="البحث حسب اسم المنتج...">
                        <div style="background: repeating-linear-gradient(-45deg, #1d56ff96, #1d56ff7a 2px, rgba(255, 255, 255, 0) 3px, rgba(255, 255, 255, 0) 7px); width: 100%; height: 7px;"></div>

                        <table>
                            <thead>
                                <tr>
                                    <th data-table="myserver" data-column="0">الخطة</th>
                                    <th data-table="myserver" data-column="1">تاريخ الانشاء</th>
                                    <th data-table="myserver" data-column="2">الايام المتبقية</th>
                                    <th data-table="myserver" data-column="3">حالة المنتج</th>
                                    <th data-table="myserver" data-column="4">لوحة التحكم</th>
                                </tr>
                            </thead>
                            <tbody id="table-myserver">
                                <!-- Dynamic content will be loaded here -->
                            </tbody>
                        </table>
                        <div class="pagination" id="table-myserver-pagination">
                            <!-- Pagination buttons will be dynamically added here -->
                        </div>
                    </div>
                </div>
                <div class="account-body-page" data-page="connected" style="display: none;">
                    <div class="account-body-page-title">
                        <h1>الربط</h1>
                    </div>
                    <div class="account-body-page-subtitle">
                        <h1>ربط حسابك من برامج أخرى يعني أنك تسمح لموقعنا بالتواصل مع حساباتك في تلك البرامج مثل Google أو Discord. هذا يجعل تسجيل الدخول أو مشاركة المعلومات أسرع وأسهل دون الحاجة لإدخال بياناتك كل مرة. يمكن أن يساعد أيضًا في تأمين حسابك إذا
                            كانت البرامج تدعم حماية إضافية مثل المصادقة الثنائية.</h1>
                    </div>

                    <div class="connected-apps">
                        <div class="app">

                            <% if (req.session.user.discord) { %>
                                <div class="app-icon" style="border-radius: 50%; overflow: hidden;">
                                    <img src="https://cdn.discordapp.com/avatars/<%= req.session.user.discord.id %>/<%= req.session.user.discord.avatar %>.png" alt="">
                                </div>
                                <div class="app-button remover-link-discord">
                                    <button>الغاء الربط</button>
                                </div>
                                <% }
                                
                                else
                                {
                                    %>
                                    <div class="app-icon">
                                        <img src="../home/img/discord.png" alt="">
                                    </div>
                                    <div class="app-button link-discord">
                                        <button>اربط</button>
                                    </div>
                                    <%
                                }
                                %>
                        </div>

                        <div class="app">

                            <% if (req.session.user.google) { %>
                                <div class="app-icon" style="border-radius: 50%; overflow: hidden;">
                                    <img src="<%= req.session.user.google.photos[0].value %>" alt="">
                                </div>
                                <div class="app-button remover-link-google">
                                    <button>الغاء الربط</button>
                                </div>
                                <% }
    
                            else
                            {
                                %>
                                    <div class="app-icon">
                                        <img src="../home/img/google.png" alt="">
                                    </div>
                                    <div class="app-button link-google">
                                        <button>اربط</button>
                                    </div>
                                    <%
    }
    %>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="debug user-editor">

        </div>

        <style>
            .account-system {
                width: 70%;
                height: auto;
                background-color: rgb(255, 255, 255);
                box-shadow: rgba(50, 50, 93, 0.25) 0px 13px 27px -5px, rgba(0, 0, 0, 0.3) 0px 8px 16px -8px;
                border-radius: 20px;
                margin-top: 20px;
                display: flex;
                justify-content: space-between;
                margin-top: 20px;
                position: relative;
                justify-content: right;
                padding-bottom: 20px;
            }
            
            @media (max-width:1500px) {
                .account-system {
                    width: 95%;
                }
            }
            
            .account-rightside {
                position: relative;
                width: 250px;
                height: 100%;
                transition: all 0.3s;
                padding-right: 20px;
                overflow: hidden;
            }
            
            .sideline {
                position: absolute;
                top: 5px;
                left: 0px;
                background: linear-gradient(180deg, rgba(99, 99, 99, 0.5) 0%, rgba(184, 184, 184, 0.486) 100%);
                width: 1.5px;
                height: 95%;
            }
            
            .account-body {
                width: 100%;
                height: 100%;
            }
            
            .account-page {
                position: relative;
                float: right;
                width: 180px;
                height: auto;
                display: flex;
                justify-content: space-between;
                margin-bottom: 10px;
                cursor: pointer;
                transition: all 0.3s;
                color: #475466;
                padding-right: 10px;
                border-radius: 10px;
            }
            
            .account-page h1 {
                font-size: 13px;
            }
            
            .account-page i {
                font-size: 15px;
                margin: 14px;
                color: #1d55ff;
            }
            
            .account-body-page {
                position: relative;
                width: 100%;
                height: 100%;
            }
            
            .account-body-page-title {
                width: 100%;
                height: auto;
                margin: 10px;
            }
            
            .account-body-page-title h1 {
                font-size: 16px;
                text-align: right;
            }
            
            .account-body-page-subtitle {
                width: 90%;
                height: auto;
                margin: 10px;
            }
            
            .account-body-page-subtitle h1 {
                font-size: 12px;
                text-align: right;
                color: #475466;
                font-family: 'Cairo';
            }
            
            @media screen and (max-width: 1200px) {
                .account-rightside {
                    width: 40px !important;
                }
                .account-page {
                    right: -160px !important;
                }
            }
            
            .account-page:hover {
                color: #3b6bff;
                background: #e5eeff !important;
            }
            
            .vps-card-skeleton {
                width: 240px;
                height: auto;
                background-color: #ffffff;
                box-shadow: rgba(50, 50, 93, 0.25) 0px 13px 27px -5px, rgba(0, 0, 0, 0.3) 0px 8px 16px -8px;
                border-radius: 0px 0px 15px 15px;
                padding: 10px;
                margin: 20px;
                overflow: hidden;
                border-top: 7px solid rgba(228, 228, 228, 0.705);
            }
            
            .vps-card-header-skeleton,
            .vps-card-price-skeleton,
            .vps-card-info-skeleton {
                width: 100%;
                margin-bottom: 10px;
            }
            
            .debug {
                top: 0px;
                left: 0px;
                position: fixed;
                width: 100%;
                height: 100%;
                background-color: rgba(255, 255, 255, 0.705);
                z-index: 1000;
                overflow: auto;
                display: none;
            }
            
            .debug-panel {
                position: relative;
                top: 50%;
                transform: translateY(-50%);
                width: 400px;
                height: auto;
                padding: 10px;
                background-color: rgb(255, 255, 255);
                box-shadow: rgba(100, 100, 111, 0.336) 0px 7px 29px 0px;
                border-radius: 15px;
            }
            
            .debug-panel-title {
                width: auto;
                height: auto;
            }
            
            .debug-panel-title h1 {
                font-size: 17px;
                font-family: 'Cairo';
            }
            
            .debug-panel-item {
                width: 100%;
                height: auto;
                padding: 10px;
            }
            
            .debug-panel-item h1 {
                font-size: 12px;
                text-align: right;
            }
            
            .debug-panel-item input {
                width: 70%;
                font-size: 12px;
                float: right;
                border: none;
                padding: 5px;
                border-right: 1px solid black;
            }
            
            .debug-panel-smallpanel {
                width: 90%;
                height: auto;
                display: flex;
                justify-content: space-between;
                border-right: 1px solid black;
                box-shadow: rgba(100, 100, 111, 0.336) 0px 7px 29px 0px;
                margin-top: 10px;
            }
            
            .debug-panel-smallpanel-item {
                width: auto;
                height: auto;
                padding: 0px 20px;
            }
            
            .debug-panel-smallpanel-item button {
                width: 25px;
                height: 24px;
                border: none;
                background-color: rgba(0, 0, 0, 0.144);
                border-radius: 50%;
                color: rgb(43, 43, 43);
                font-size: 12px;
                margin-top: 8px;
            }
            
            .debug-panel-buttons {
                margin-top: 10px;
                width: auto;
                height: auto;
                padding: 10px;
                display: flex;
                flex-flow: wrap;
                gap: 10px;
            }
            
            .debug-panel-buttons button {
                width: 30px;
                height: 30px;
                border: none;
                background-color: rgba(0, 0, 0, 0.144);
                border-radius: 50%;
                padding: 5px;
                color: rgb(43, 43, 43);
                font-size: 15px;
            }
            
            span.msg,
            span.choose {
                color: #555;
                padding: 5px 0 10px;
                display: inherit;
                float: right;
            }
            
            .select span {
                float: right;
                padding: 0px 10px;
            }
            
            .dropdown {
                width: 70%;
                display: inline-block;
                border-radius: 2px;
                transition: all .5s ease;
                position: relative;
                font-size: 14px;
                color: #474747;
                text-align: left;
                border-right: solid 1px black;
                float: right;
            }
            
            .dropdown .select {
                cursor: pointer;
                display: block;
                padding: 5px 10px;
            }
            
            .dropdown .select>i {
                font-size: 13px;
                color: #888;
                cursor: pointer;
                transition: all .3s ease-in-out;
                float: right;
                line-height: 25px
            }
            
            .dropdown:active {
                background-color: #f8f8f8
            }
            
            .dropdown.active:hover,
            .dropdown.active {
                box-shadow: 0 0 4px rgb(204, 204, 204);
                border-radius: 2px 2px 0 0;
                background-color: #f8f8f8
            }
            
            .dropdown.active .select>i {
                transform: rotate(-90deg)
            }
            
            .dropdown .dropdown-menu {
                position: absolute;
                background-color: #fff;
                width: 100%;
                left: 0;
                margin-top: 1px;
                box-shadow: 0 1px 2px rgb(204, 204, 204);
                border-radius: 0 1px 2px 2px;
                overflow: hidden;
                display: none;
                max-height: 144px;
                overflow-y: auto;
                z-index: 9
            }
            
            .dropdown .dropdown-menu li {
                padding: 10px;
                transition: all .2s ease-in-out;
                font-size: 10px;
                text-align: right;
                cursor: pointer
            }
            
            .dropdown .dropdown-menu {
                padding: 0;
                list-style: none
            }
            
            .dropdown .dropdown-menu li:hover {
                background-color: #f2f2f2
            }
            
            .dropdown .dropdown-menu li:active {
                background-color: #e2e2e2
            }
        </style>
    </center>
    <%- include('../partial/footer.ejs') %>

        <script>
            $(document).on("click", '.dropdown', function() {
                $(this).attr('tabindex', 1).focus();
                $(this).toggleClass('active');
                $(this).find('.dropdown-menu').slideToggle(300);
            });
            $(document).on("focusout", '.dropdown', function() {
                $(this).removeClass('active');
                $(this).find('.dropdown-menu').slideUp(300);
            });
            $(document).on("click", '.dropdown .dropdown-menu li', function() {
                $(this).parents('.dropdown').find('span').text($(this).text());
                $(this).parents('.dropdown').find('input').attr('value', $(this).attr('id'));
            });


            $(document).on("click", '.dropdown-menu li', function() {
                var input = '<strong>' + $(this).parents('.dropdown').find('input').val() + '</strong>',
                    msg = '<span class="msg">Hidden input value: ';
                $('.msg').html(msg + input + '</span>');
            });
        </script>

        <script>
            // Global variables for data and pagination
            let data = [];
            let rowsPerPage = 10;
            let currentPage = {
                myserver: 1,
                plan: 1,
                logs: 1
            };
            let filteredData = {
                myserver: [],
                plan: [],
                logs: [],
            };
            let sortOrder = {
                myserver: "asc",
                plan: "asc"
            };
            let currentSortedColumn = {
                myserver: -1,
                plan: -1,
                logs: -1,
            };

            $(document).ready(function() {
                fetchData("myserver"); // Fetch data for users table

                // Search functionality for both tables
                $('#search-myserver').on('input', function() {
                    const searchTerm = $(this).val().toLowerCase();
                    filteredData.users = data.users.filter(row => row[0].toLowerCase().includes(searchTerm));
                    currentPage.users = 1;
                    renderTable("myserver");
                    renderPagination("myserver");
                    handleSearch("myserver", searchTerm); // Change "logs" to the tableType you want to search, e.g., "users" or "plan"
                });

                // Sorting functionality for both tables
                $('th[data-table="myserver"]').on('click', function() {
                    handleSort("myserver", $(this).data('column'));
                });
            });

            function fetchData(tableType) {
                $.ajax({
                    url: '/get-csrf-token',
                    type: 'GET',
                    success: function(response) {
                        const csrfToken = response.csrfToken;
                        $.ajax({
                            url: getApiUrl(tableType),
                            type: 'GET',
                            headers: {
                                'X-CSRF-Token': csrfToken
                            },
                            data: {
                                userid: "<%- req.session.user.id %>"
                            },
                            success: function(response) {
                                if (response.success) {
                                    data[tableType] = parseData(response, tableType);
                                    filteredData[tableType] = data[tableType];
                                    renderTable(tableType);
                                    renderPagination(tableType);
                                } else {
                                    $(`#table-${tableType}`).append(`<tr><td colspan="6">Error loading ${tableType}.</td></tr>`);
                                }
                            },
                            error: function() {
                                $(`#table-${tableType}`).append(`<tr><td colspan="6">Error fetching data.</td></tr>`);
                            }
                        });
                    },
                    error: function() {
                        console.error('Error fetching CSRF token.');
                    }
                });
            }

            function renderTable(tableType) {

                const tableBody = $(`#table-${tableType}`);
                tableBody.empty();

                const startIndex = (currentPage[tableType] - 1) * rowsPerPage;
                const paginatedData = filteredData[tableType].slice(startIndex, startIndex + rowsPerPage);


                paginatedData.forEach(row => {
                    if (!Array.isArray(row)) {
                        console.error("Expected an array but got:", row);
                        return;
                    }

                    const tr = $('<tr></tr>').addClass('fade-in');
                    row.forEach(cell => {
                        tr.append(`<td>${cell}</td>`);
                    });
                    tableBody.append(tr);
                });
            }

            function handleSearch(tableType, searchTerm) {
                // Filter your data based on the search term
                filteredData[tableType] = data[tableType].filter(item => {
                    // Replace 'someField' with the actual field you want to search
                    return item.someField.includes(searchTerm);
                });

                // Reset the current page to 1
                currentPage[tableType] = 1;

                // Render the table and pagination for the filtered data
                renderTable(tableType);
                renderPagination(tableType);
            }

            function renderPagination(tableType) {
                const totalPages = Math.ceil(filteredData[tableType].length / rowsPerPage);
                const pagination = $(`#table-${tableType}-pagination`);
                pagination.empty();

                const currentPageNumber = currentPage[tableType];

                // Calculate the range of pages to display
                let startPage = Math.max(1, currentPageNumber - 1);
                let endPage = Math.min(totalPages, startPage + 3);

                // Adjust startPage if we're near the end
                if (endPage - startPage < 3 && startPage > 1) {
                    startPage = Math.max(1, endPage - 3);
                }

                // "Previous" button
                const prevBtn = $('<span></span>').text('<');
                if (currentPageNumber > 1) {
                    prevBtn.addClass('active');
                    prevBtn.on('click', function() {
                        currentPage[tableType] -= 1;
                        renderTable(tableType);
                        renderPagination(tableType);
                    });
                }
                pagination.append(prevBtn);

                // Page numbers
                for (let i = startPage; i <= endPage; i++) {
                    const pageBtn = $('<span></span>').text(i);
                    if (i === currentPageNumber) {
                        pageBtn.addClass('active');
                    }
                    pageBtn.on('click', function() {
                        currentPage[tableType] = i;
                        renderTable(tableType);
                        renderPagination(tableType);
                    });
                    pagination.append(pageBtn);
                }

                // "Next" button
                const nextBtn = $('<span></span>').text('>');
                if (currentPageNumber < totalPages) {
                    nextBtn.addClass('active');
                    nextBtn.on('click', function() {
                        currentPage[tableType] += 1;
                        renderTable(tableType);
                        renderPagination(tableType);
                    });
                }
                pagination.append(nextBtn);
            }

            function handleSort(tableType, column) {
                if (currentSortedColumn[tableType] === column) {
                    sortOrder[tableType] = (sortOrder[tableType] === "asc") ? "desc" : "asc";
                } else {
                    sortOrder[tableType] = "asc";
                    currentSortedColumn[tableType] = column;
                }

                $(`th[data-table="${tableType}"]`).removeClass('sorted-asc sorted-desc');
                $(`th[data-table="${tableType}"][data-column="${column}"]`).addClass(sortOrder[tableType] === "asc" ? 'sorted-asc' : 'sorted-desc');

                sortData(filteredData[tableType], column, sortOrder[tableType]);
                renderTable(tableType);
            }

            function sortData(dataToSort, column, order) {
                dataToSort.sort((a, b) => {
                    const cellA = a[column].toString().toLowerCase();
                    const cellB = b[column].toString().toLowerCase();

                    const numA = parseFloat(cellA.replace(/[^0-9.-]+/g, ""));
                    const numB = parseFloat(cellB.replace(/[^0-9.-]+/g, ""));

                    if (!isNaN(numA) && !isNaN(numB)) {
                        return order === 'asc' ? numA - numB : numB - numA;
                    } else {
                        return order === 'asc' ? cellA.localeCompare(cellB) : cellB.localeCompare(cellA);
                    }
                });
            }

            function getApiUrl(tableType) {
                switch (tableType) {
                    case "myserver":
                        return '/api/myserver';
                    default:
                        return '';
                }
            }

            function parseData(response, tableType) {
                switch (tableType) {
                    case "myserver":
                        return response.servers.map(item => [item.userid, item.payid, item.date, item.expaire]);
                    default:
                        return [];
                }
            }
        </script>